<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>nEoYe&#39;s blog</title>
  
  <subtitle>刘文哲的技术博客 nEoYe&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://neoyeelf.github.io/"/>
  <updated>2019-04-08T09:23:42.493Z</updated>
  <id>http://neoyeelf.github.io/</id>
  
  <author>
    <name>刘文哲</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>golang也能实现抽象类了？</title>
    <link href="http://neoyeelf.github.io/2019/04/07/golang%E4%B9%9F%E8%83%BD%E5%AE%9E%E7%8E%B0%E6%8A%BD%E8%B1%A1%E7%B1%BB%E4%BA%86%EF%BC%9F/"/>
    <id>http://neoyeelf.github.io/2019/04/07/golang也能实现抽象类了？/</id>
    <published>2019-04-07T12:12:00.000Z</published>
    <updated>2019-04-08T09:23:42.493Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍了一种通过 struct 和 interface 来在 golang 中实现抽象类的方式。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="后台开发" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/"/>
    
      <category term="Golang" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/Golang/"/>
    
    
      <category term="Golang" scheme="http://neoyeelf.github.io/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>koa中如何优雅地处理异常</title>
    <link href="http://neoyeelf.github.io/2018/04/29/koa%E4%B8%AD%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E5%9C%B0%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8/"/>
    <id>http://neoyeelf.github.io/2018/04/29/koa中如何优雅地处理异常/</id>
    <published>2018-04-29T04:13:00.000Z</published>
    <updated>2018-04-29T06:05:21.984Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;一个良好的编码习惯必然离不开异常处理，本文将主要介绍如何在koa框架下面优雅地抛出错误，并统一处理返回。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="后台开发" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/"/>
    
      <category term="Node" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/Node/"/>
    
    
      <category term="Node" scheme="http://neoyeelf.github.io/tags/Node/"/>
    
      <category term="koa" scheme="http://neoyeelf.github.io/tags/koa/"/>
    
  </entry>
  
  <entry>
    <title>一次Node.js的性能问题排查</title>
    <link href="http://neoyeelf.github.io/2018/01/18/%E4%B8%80%E6%AC%A1Node.js%E7%9A%84%E6%80%A7%E8%83%BD%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/"/>
    <id>http://neoyeelf.github.io/2018/01/18/一次Node.js的性能问题排查/</id>
    <published>2018-01-18T11:40:00.000Z</published>
    <updated>2018-01-18T11:40:26.476Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前几天，我们发现了一个性能问题，当数据量过大时，由于请求超时，导致我们的web应用的某个页面数据加载不出来。这篇文章用来记录下当时的排查过程，以及一些思考。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="后台开发" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/"/>
    
      <category term="Node" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/Node/"/>
    
    
      <category term="Node" scheme="http://neoyeelf.github.io/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>Java：关于值传递你需要了解的事情</title>
    <link href="http://neoyeelf.github.io/2017/12/03/Java%EF%BC%9A%E5%85%B3%E4%BA%8E%E5%80%BC%E4%BC%A0%E9%80%92%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E7%9A%84%E4%BA%8B%E6%83%85/"/>
    <id>http://neoyeelf.github.io/2017/12/03/Java：关于值传递你需要了解的事情/</id>
    <published>2017-12-03T02:30:00.000Z</published>
    <updated>2017-12-03T02:29:18.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;我们都知道，在Java中，方法的参数传递永远都是指值传递。让我们来看一看基本类型和集合的参数传递在内存中是如何体现的。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="后台开发" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/"/>
    
      <category term="Java" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/Java/"/>
    
    
      <category term="Java" scheme="http://neoyeelf.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>利用docker-compose快速部署php-fpm+nginx环境</title>
    <link href="http://neoyeelf.github.io/2017/11/02/%E5%88%A9%E7%94%A8docker-compose%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2php-fpm+nginx%E7%8E%AF%E5%A2%83/"/>
    <id>http://neoyeelf.github.io/2017/11/02/利用docker-compose快速部署php-fpm+nginx环境/</id>
    <published>2017-11-02T12:30:00.000Z</published>
    <updated>2017-11-14T02:16:40.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;“PHP是世界上最好的语言”，这个大家应该都没有争议把:)&lt;br&gt;但是当你用php写完一个项目后，你会发现，如果要将项目部署到线上，光是nginx+php-fpm的环境部署就要花费你许多时间。利用docker，可以大大节省我们的环境部署时间&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="后台开发" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/"/>
    
      <category term="docker" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/docker/"/>
    
    
      <category term="PHP" scheme="http://neoyeelf.github.io/tags/PHP/"/>
    
      <category term="Nginx" scheme="http://neoyeelf.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>ArrayList和LinkedList的效率对比</title>
    <link href="http://neoyeelf.github.io/2017/10/03/ArrayList%E5%92%8CLinkedList%E7%9A%84%E6%95%88%E7%8E%87%E5%AF%B9%E6%AF%94/"/>
    <id>http://neoyeelf.github.io/2017/10/03/ArrayList和LinkedList的效率对比/</id>
    <published>2017-10-03T03:28:00.000Z</published>
    <updated>2017-11-14T02:15:28.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;List相信大家都使用得很多，其中ArrayList和LinkedList是使用最多的2个，本文将从源码角度解读2者的异同，效率和使用场景。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="后台开发" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/"/>
    
      <category term="JAVA" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/JAVA/"/>
    
    
      <category term="JAVA" scheme="http://neoyeelf.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>API设计和代码结构组织心得</title>
    <link href="http://neoyeelf.github.io/2016/03/10/PHP%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE%E6%97%B6%E7%9A%84api%E8%AE%BE%E8%AE%A1%E5%92%8C%E4%BB%A3%E7%A0%81%E7%BB%84%E7%BB%87%E5%BF%83%E5%BE%97/"/>
    <id>http://neoyeelf.github.io/2016/03/10/PHP开发项目时的api设计和代码组织心得/</id>
    <published>2016-03-10T09:22:11.000Z</published>
    <updated>2017-11-14T02:15:57.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近的一个项目尝试使用了laravel框架，在项目完成后，有关代码组织结构方面做一些总结，写一些心得体会。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="后台开发" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/"/>
    
      <category term="PHP" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/PHP/"/>
    
    
      <category term="PHP" scheme="http://neoyeelf.github.io/tags/PHP/"/>
    
      <category term="laravel" scheme="http://neoyeelf.github.io/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>JAVA多线程学习</title>
    <link href="http://neoyeelf.github.io/2016/03/10/JAVA%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    <id>http://neoyeelf.github.io/2016/03/10/JAVA多线程学习/</id>
    <published>2016-03-10T01:31:36.000Z</published>
    <updated>2017-10-20T08:31:17.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本篇文章主要介绍了Java多线程的基本实现，常用方法和高级方法&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="后台开发" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/"/>
    
      <category term="JAVA" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/JAVA/"/>
    
    
      <category term="JAVA" scheme="http://neoyeelf.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>solr新手指南</title>
    <link href="http://neoyeelf.github.io/2016/02/24/solr%E6%96%B0%E6%89%8B%E6%8C%87%E5%8D%97/"/>
    <id>http://neoyeelf.github.io/2016/02/24/solr新手指南/</id>
    <published>2016-02-24T12:08:51.000Z</published>
    <updated>2017-11-14T02:16:30.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近项目中有用到solr作为搜索引擎，然后感觉中文资料比较少，所以自己结合网上的一些资料和英文文档写出了以下指南，有错误的地方还望指正。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="后台开发" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="后台开发，solr" scheme="http://neoyeelf.github.io/tags/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91%EF%BC%8Csolr/"/>
    
  </entry>
  
  <entry>
    <title>PHP的基础知识</title>
    <link href="http://neoyeelf.github.io/2016/02/24/php%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://neoyeelf.github.io/2016/02/24/php基础知识/</id>
    <published>2016-02-24T12:08:14.000Z</published>
    <updated>2018-04-29T04:14:30.756Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章主要介绍了PHP的基础语法和知识点，适合PHP新手和刚入门的web后台开发新手&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="后台开发" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/"/>
    
      <category term="PHP" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/PHP/"/>
    
    
      <category term="PHP" scheme="http://neoyeelf.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>YII框架学习——有关ActiveRecord的一些坑</title>
    <link href="http://neoyeelf.github.io/2015/07/24/YII%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E6%9C%89%E5%85%B3ActiveRecord%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
    <id>http://neoyeelf.github.io/2015/07/24/YII框架学习——有关ActiveRecord的一些坑/</id>
    <published>2015-07-24T12:08:38.000Z</published>
    <updated>2017-11-14T02:16:18.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在这里我想总结一下我学习YII框架的过程中，踩过的那些坑。希望能给YII框架的初学者一些帮助，使大家能更快地熟悉YII框架。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="后台开发" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/"/>
    
      <category term="PHP" scheme="http://neoyeelf.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91/PHP/"/>
    
    
      <category term="后台开发，PHP，YII" scheme="http://neoyeelf.github.io/tags/%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91%EF%BC%8CPHP%EF%BC%8CYII/"/>
    
  </entry>
  
</feed>
